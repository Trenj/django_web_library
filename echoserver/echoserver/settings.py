"""
Django settings for echoserver project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mla=*&@xjyq=doian!*=s!yio!bg*@m4^8xg-z(xmz&f=d^=k8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'echoapp',
    'captcha',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'echoserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'echoserver.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bookstore',
        'USER': 'root',
        'PASSWORD': '2005037',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}

AUTH_USER_MODEL = 'echoapp.User'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# Настройка системы валидации паролей в Django (активирует проверки при создании/изменении пароля)
AUTH_PASSWORD_VALIDATORS = [
    # Первый валидатор: проверяет схожесть пароля с полями пользователя (username, email и т.д.)
    {
        # Указывает класс валидатора из стандартной библиотеки Django
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        # Настройки валидатора (опционально)
        'OPTIONS': {
            'max_similarity': 0.7,  # Максимально допустимая схожесть (0.0 - 1.0)
        }
    },

    # Второй валидатор: обеспечивает минимальную требуемую длину пароля (по умолчанию 8 символов)
    {
        # Класс валидатора минимальной длины пароля
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        # Настройки валидатора (опционально)
        'OPTIONS': {
            'min_length': 8,  # Минимальная длина пароля
        }
    },

    # Третий валидатор: блокирует популярные/слабые пароли (типа "123456", "password")
    {
        # Класс валидатора, проверяющего пароль против списка распространённых комбинаций
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },

    # Четвёртый валидатор: запрещает пароли, состоящие только из цифр (например "12345678")
    {
        # Класс валидатора, отвергающего чисто числовые пароли
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    }
]

# Дополнительные настройки безопасности паролей
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',  # Основной алгоритм хеширования
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',  # Резервный алгоритм
]

# Настройки сессии для безопасности
SESSION_COOKIE_AGE = 1209600  # Время жизни сессии в секундах (2 недели)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Сессия истекает при закрытии браузера
SESSION_SAVE_EVERY_REQUEST = True  # Обновление времени жизни сессии при каждом запросе

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Security settings
SECURE_SSL_REDIRECT = False  # Отключаем для разработки
SESSION_COOKIE_SECURE = False  # Отключаем для разработки
CSRF_COOKIE_SECURE = False  # Отключаем для разработки
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Captcha settings
CAPTCHA_LENGTH = 4
CAPTCHA_TIMEOUT = 1
CAPTCHA_IMAGE_SIZE = (160, 50)
CAPTCHA_FONT_SIZE = 28
CAPTCHA_LETTER_ROTATION = (-35, 35)
